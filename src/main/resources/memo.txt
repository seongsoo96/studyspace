:: SQL 중심적인 개발의 문제점
   - 무한 반복, 지루한 코드
   - 객체지향 언어와 관계형 데이터베이스의 차이에서 오는 어려움

   - 객체를 테이블에 맞추어 모델링해야함.
   - 진정한 의미의 계층분할이 어려움
   - 객체를 자바 컬렉션처럼 DB에 저장하고 사용하고 싶음

   - 프로그래머는 객체지향 프로그래밍의 장점을 살려서 프로그래밍을 하고싶다.
   - 그러나 패러다임의 불일치로 인해서 급한 불을 끄는 식으로 sql매퍼처럼 일하고 있었다.
   - 그래서 JPA를 사용해서 OOP를 OOP답게 하용하고자 한다.

:: JPA 소개
    === ORM ===
    - Object-relational mapping(객체 관계 매핑)
    - 객체는 객체대로 설계
    - 관계형 데이터베이스는 관계형 데이터베이스대로 설계
    - ORM 프레임워크가 중간에서 매핑
    - 대중적인 언어에는 대부분 ORM 기술이 존재

    == JPA는 표준 명세 ==
    - JPA는 인터페이스의 모음
    - JPA 2.1 표준 명세를 구현한 3가지 구현체

    1차 캐시와 동일성 보장
